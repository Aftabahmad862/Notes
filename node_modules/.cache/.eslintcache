[{"/home/danish/Desktop/website/src/index.js":"1","/home/danish/Desktop/website/src/App.js":"2","/home/danish/Desktop/website/src/Components/Nav.js":"3","/home/danish/Desktop/website/src/Components/Home.js":"4","/home/danish/Desktop/website/src/Pages/Create.js":"5","/home/danish/Desktop/website/src/Pages/Home.js":"6","/home/danish/Desktop/website/src/Pages/Cards.js":"7","/home/danish/Desktop/website/src/Pages/Layout.js":"8"},{"size":170,"mtime":1634058095416,"results":"9","hashOfConfig":"10"},{"size":826,"mtime":1637390915976,"results":"11","hashOfConfig":"10"},{"size":164,"mtime":1636115322920,"results":"12","hashOfConfig":"10"},{"size":640,"mtime":1636181268943,"results":"13","hashOfConfig":"10"},{"size":3257,"mtime":1637322799040,"results":"14","hashOfConfig":"10"},{"size":919,"mtime":1637470602712,"results":"15","hashOfConfig":"10"},{"size":1649,"mtime":1637469949056,"results":"16","hashOfConfig":"10"},{"size":3727,"mtime":1637471081324,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"7xn42",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"/home/danish/Desktop/website/src/index.js",[],["40","41"],"/home/danish/Desktop/website/src/App.js",[],"/home/danish/Desktop/website/src/Components/Nav.js",[],["42","43"],"/home/danish/Desktop/website/src/Components/Home.js",["44"],"import '../App.css';\n//import { Button } from '@material-ui/core';\nimport { useState } from 'react'\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nexport default function Home() {\n\n    const [num, setnum] = useState(0);\n    return (\n        <div className=\"stack\" style={{ placeContent: 'center' }} >\n            <h1  style={{fontSize:'70px'}}>{num}</h1>\n       \n                <Button variant=\"contained\" color='success' onClick={() => { setnum(num + 1) }}> Increment</Button>\n                <Button variant=\"contained\" onClick={() => { setnum(num - 1) }}> Decrement</Button>\n\n        </div>\n    )\n}\n",["45","46"],"/home/danish/Desktop/website/src/Pages/Create.js",["47"],"import { useState } from 'react';\nimport Container from '@material-ui/core/Container'\n//import SendIcon from '@material-ui/icons/Send';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, Radio, RadioGroup, FormControlLabel, TextField, FormControl, FormLabel } from '@material-ui/core';\nimport { useHistory } from 'react-router';\nconst UseStyles = makeStyles({\n  btn: {\n    marginTop: 20,\n    fontSize: 16,\n    '&:hover': {\n      backgroundColor: 'violet'\n    }\n  },\n\n  field: {\n\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block'\n  }\n})\n\nconst Create = () => {\n\n  const history=useHistory()\n  const classes = UseStyles()\n\n  const [title, settitle] = useState('')\n  const [details, setdetails] = useState('')\n  const [catagory, setcatagory] = useState('todo')\n\n  const [titleError, settitleError] = useState(false)\n  const [detailsError, setdetailsError] = useState(false)\n\n\n\n  const submitcall = (e) => {\n    e.preventDefault()\n    setdetailsError(false)\n    settitleError(false)\n\n    if (title === '') {\n      settitleError(true)\n    }\n    if (details === '') {\n      setdetailsError(true)\n    }\n\n    if (title && details) {\n      fetch('http://localhost:8000/notes' , {\n        method: 'POST',\n        headers: { \"Content-type\": \"application/json\" },\n        body: JSON.stringify({title, details, catagory})\n\n      })//.then(()=>history.push(\"/\"))\n    }\n\n  }\n\n\n\n  return (\n\n    <Container>\n\n      <Typography\n        variant=\"h6\"\n        component='h1'\n        color=\"TextSecondary\"\n        gutterBottom\n      >\n        Create Notes page\n      </Typography>\n\n      <form noValidate autoComplete='off' onSubmit={submitcall}>\n        <TextField\n          onChange={(e) => { settitle(e.target.value) }}\n\n          className={classes.field}\n          label='Note Title'\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          required\n          error={titleError}\n        />\n\n        <TextField\n          onChange={(e) => { setdetails(e.target.value) }}\n          className={classes.field}\n          label='Details'\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          required\n          multiline\n          rows={4}\n          error={detailsError}\n        />\n        <FormControl className={classes.field}>\n          <FormLabel> Note Category</FormLabel>\n          <RadioGroup value={catagory} onChange={(e) => setcatagory(e.target.value)} >\n            <FormControlLabel value=\"Money\" control={<Radio />} label=\"Money\" />\n            <FormControlLabel value=\"todo\" control={<Radio />} label=\"Todo\" />\n            <FormControlLabel value=\"reminder\" control={<Radio />} label=\"Reminder\" />\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\n\n          </RadioGroup>\n        </FormControl>\n        <Button\n          type=\"submit\"\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"primary\"\n          //   startIcon={ < SendIcon />}\n          endIcon={< KeyboardArrowRightIcon />}\n        >      Send\n        </Button>\n\n\n      </form>\n\n\n    </Container>\n  )\n}\n\nexport default Create","/home/danish/Desktop/website/src/Pages/Home.js",[],"/home/danish/Desktop/website/src/Pages/Cards.js",[],"/home/danish/Desktop/website/src/Pages/Layout.js",["48","49"],"import Drawer from '@material-ui/core/Drawer'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core'\nimport React from 'react'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport { AddCircleOutlined, SubjectOutlined } from '@material-ui/icons'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport { format } from 'date-fns'\nimport { Avatar } from '@material-ui/core'\nconst UseStyles = makeStyles((theme) => {\n    return {\n        page: {\n\n            background: '#f9f9f9',\n            width: '100%',\n            marginLeft: theme.spacing(22)\n        },\n        dr: {\n            marginTop: 20\n        },\n\n        root: {\n            display: 'flex'\n\n        },\n        active: {\n            backgroundColor: \"#f4f4f4\"\n        },\n        title: {\n            padding: theme.spacing(2)\n        },\n        apbar: {\n            marginLeft: theme.spacing(2),\n            backgroundColor:'#f4f4f4',\n            color:'black',\n            \n        },\n        toolbar: theme.mixins.toolbar,\n        toolbar: {\n            paddingTop: theme.spacing(10)\n        },\n        date: {\n\n            flexGrow: 1,\n            textAlign: 'center',\n            //  marginLeft: theme.spacing(75)\n        }\n\n\n    }\n})\n\nexport const Layout = ({ children }) => {\n    const classes = UseStyles()\n    const history = useHistory()\n    const location = useLocation()\n\n    const menuItems = [\n        {\n            text: \"My Notes\",\n            icon: <SubjectOutlined\n                color='primary'\n            />,\n            path: '/'\n        },\n        {\n            text: \"Create Notes\",\n            icon: <AddCircleOutlined\n                color='primary'\n            />,\n            path: '/create'\n        }\n    ]\n\n    return (\n        <div className={classes.root}>\n\n\n            <AppBar className={classes.apbar} elevation={0}  >\n                <Toolbar>\n\n                    <Typography className={classes.date}>\n                        Today is the {format(new Date(), 'do MMMM Y')}\n                    </Typography>\n                    <Typography className={classes.title}>\n                        Dani\n                    </Typography>\n                    <Avatar src='/img.png' />\n                </Toolbar>\n            </AppBar>\n\n\n            <Drawer\n                className={classes.dr}\n                variant='permanent'\n                anchor='left'\n\n            >\n                <Typography\n                    variant='h5'\n                    className={classes.title}\n                >\n                    Dani Notes\n                </Typography>\n\n                <List>\n                    {menuItems.map(item =>\n                    (\n                        <ListItem\n                            button\n                            onClick={() => history.push(item.path)}\n                            className={location.pathname == item.path ? classes.active : null}\n                            key={item.text}>\n                            <ListItemIcon>\n                                {item.icon}\n                            </ListItemIcon>\n\n                            <ListItemText primary={item.text} />\n\n                        </ListItem>\n                    ))}\n                </List>\n\n            </Drawer>\n            <div className={classes.page}>\n                <div className={classes.toolbar}>\n\n                    {children}\n\n                </div>\n\n            </div>\n        </div>\n    )\n}\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"50","replacedBy":"54"},{"ruleId":"52","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":13},{"ruleId":"50","replacedBy":"60"},{"ruleId":"52","replacedBy":"61"},{"ruleId":"56","severity":1,"message":"62","line":28,"column":9,"nodeType":"58","messageId":"59","endLine":28,"endColumn":16},{"ruleId":"63","severity":1,"message":"64","line":44,"column":9,"nodeType":"65","messageId":"66","endLine":44,"endColumn":16},{"ruleId":"67","severity":1,"message":"68","line":117,"column":58,"nodeType":"69","messageId":"66","endLine":117,"endColumn":60},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],["70"],["71"],"no-unused-vars","'Stack' is defined but never used.","Identifier","unusedVar",["70"],["71"],"'history' is assigned a value but never used.","no-dupe-keys","Duplicate key 'toolbar'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation"]