{"ast":null,"code":"var _jsxFileName = \"/home/danish/Desktop/website/src/Pages/Create.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Container from '@material-ui/core/Container'; //import SendIcon from '@material-ui/icons/Send';\n\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Radio, RadioGroup, FormControlLabel, TextField, FormControl, FormLabel } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UseStyles = makeStyles({\n  btn: {\n    marginTop: 20,\n    fontSize: 16,\n    '&:hover': {\n      backgroundColor: 'violet'\n    }\n  },\n  field: {\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block'\n  }\n});\n\nconst Create = () => {\n  _s();\n\n  const classes = UseStyles();\n  const [title, settitle] = useState('');\n  const [details, setdetails] = useState('');\n  const [catagory, setcatagory] = useState('todo');\n  const [titleError, settitleError] = useState(false);\n  const [detailsError, setdetailsError] = useState(false);\n\n  const submitcall = e => {\n    e.preventDefault();\n    setdetailsError(false);\n    settitleError(false);\n\n    if (title === '') {\n      settitleError(true);\n    }\n\n    if (details === '') {\n      setdetailsError(true);\n    }\n\n    if (title && details) {\n      fetch('http://localhost:8000/notes', {\n        method: 'POST',\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          details,\n          catagory\n        })\n      }).then(() => history.push(\"/\"));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      component: \"h1\",\n      color: \"TextSecondary\",\n      gutterBottom: true,\n      children: \"Create Notes page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      onSubmit: submitcall,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => {\n          settitle(e.target.value);\n        },\n        className: classes.field,\n        label: \"Note Title\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        fullWidth: true,\n        required: true,\n        error: titleError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        onChange: e => {\n          setdetails(e.target.value);\n        },\n        className: classes.field,\n        label: \"Details\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        fullWidth: true,\n        required: true,\n        multiline: true,\n        rows: 4,\n        error: detailsError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.field,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          children: \" Note Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n          value: catagory,\n          onChange: e => setcatagory(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"Money\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 54\n            }, this),\n            label: \"Money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"todo\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 53\n            }, this),\n            label: \"Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"reminder\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 57\n            }, this),\n            label: \"Reminder\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            value: \"work\",\n            control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 53\n            }, this),\n            label: \"Work\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        className: classes.btn,\n        variant: \"contained\",\n        color: \"primary\" //   startIcon={ < SendIcon />}\n        ,\n        endIcon: /*#__PURE__*/_jsxDEV(KeyboardArrowRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 20\n        }, this),\n        children: \"      Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Create, \"PkISz8zKu/lZi1ebiJ4DknsoFuE=\");\n\n_c = Create;\nexport default Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/home/danish/Desktop/website/src/Pages/Create.js"],"names":["useState","Container","KeyboardArrowRightIcon","Button","Typography","makeStyles","Radio","RadioGroup","FormControlLabel","TextField","FormControl","FormLabel","UseStyles","btn","marginTop","fontSize","backgroundColor","field","marginBottom","display","Create","classes","title","settitle","details","setdetails","catagory","setcatagory","titleError","settitleError","detailsError","setdetailsError","submitcall","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","history","push","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport Container from '@material-ui/core/Container'\n//import SendIcon from '@material-ui/icons/Send';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles, Radio, RadioGroup, FormControlLabel, TextField, FormControl, FormLabel } from '@material-ui/core';\nconst UseStyles = makeStyles({\n  btn: {\n    marginTop: 20,\n    fontSize: 16,\n    '&:hover': {\n      backgroundColor: 'violet'\n    }\n  },\n\n  field: {\n\n    marginTop: 20,\n    marginBottom: 20,\n    display: 'block'\n  }\n})\n\nconst Create = () => {\n\n  const classes = UseStyles()\n\n  const [title, settitle] = useState('')\n  const [details, setdetails] = useState('')\n  const [catagory, setcatagory] = useState('todo')\n\n  const [titleError, settitleError] = useState(false)\n  const [detailsError, setdetailsError] = useState(false)\n\n\n\n  const submitcall = (e) => {\n    e.preventDefault()\n    setdetailsError(false)\n    settitleError(false)\n\n    if (title === '') {\n      settitleError(true)\n    }\n    if (details === '') {\n      setdetailsError(true)\n    }\n\n    if (title && details) {\n      fetch('http://localhost:8000/notes' , {\n        method: 'POST',\n        headers: { \"Content-type\": \"application/json\" },\n        body: JSON.stringify({title, details, catagory})\n\n      }).then(()=>history.push(\"/\"))\n    }\n\n\n  }\n\n\n\n  return (\n\n    <Container>\n\n      <Typography\n        variant=\"h6\"\n        component='h1'\n        color=\"TextSecondary\"\n        gutterBottom\n      >\n        Create Notes page\n      </Typography>\n\n      <form noValidate autoComplete='off' onSubmit={submitcall}>\n        <TextField\n          onChange={(e) => { settitle(e.target.value) }}\n\n          className={classes.field}\n          label='Note Title'\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          required\n          error={titleError}\n        />\n\n        <TextField\n          onChange={(e) => { setdetails(e.target.value) }}\n          className={classes.field}\n          label='Details'\n          variant=\"outlined\"\n          color=\"secondary\"\n          fullWidth\n          required\n          multiline\n          rows={4}\n          error={detailsError}\n        />\n        <FormControl className={classes.field}>\n          <FormLabel> Note Category</FormLabel>\n          <RadioGroup value={catagory} onChange={(e) => setcatagory(e.target.value)} >\n            <FormControlLabel value=\"Money\" control={<Radio />} label=\"Money\" />\n            <FormControlLabel value=\"todo\" control={<Radio />} label=\"Todo\" />\n            <FormControlLabel value=\"reminder\" control={<Radio />} label=\"Reminder\" />\n            <FormControlLabel value=\"work\" control={<Radio />} label=\"Work\" />\n\n          </RadioGroup>\n        </FormControl>\n        <Button\n          type=\"submit\"\n          className={classes.btn}\n          variant=\"contained\"\n          color=\"primary\"\n          //   startIcon={ < SendIcon />}\n          endIcon={< KeyboardArrowRightIcon />}\n        >      Send\n        </Button>\n\n\n      </form>\n\n\n    </Container>\n  )\n}\n\nexport default Create"]},"metadata":{},"sourceType":"module"}